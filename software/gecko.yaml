esphome:
  name: geckocontrol
  platform: ESP32
  board: nodemcu-32s

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Geckocontrol Fallback Hotspot"
    password: !secret fallback_password

captive_portal:

# Enable logging
logger:
  level: DEBUG

# Enable Home Assistant API
api:

ota:

switch:
  - platform: gpio
    name: "HeatLamp"
    pin: 15
    id: heat_lamp
  - platform: template
    id: fan_switch
    name: "Ventilator on/off"
    on_turn_on:
      then:
        - output.set_level:
            id: fan_pwm
            level: 75%
    on_turn_off:
      then:
        - output.set_level:
            id: fan_pwm
            level: 0%

output:
  - platform: ac_dimmer
    id: dimmer1
    gate_pin: 16
    min_power: 15%
    zero_cross_pin:
      number: 17
      mode: INPUT
      inverted: no
  - platform: slow_pwm
    pin: 2
    id: heat_bed
    period: 2min
  - platform: slow_pwm
    pin: 4
    id: rain_pump
    period: 60min
    max_power: 0.05
    # max. 3 min of contiuous rain per hour
  - platform: ledc
    pin: 32
    id: component_red
  - platform: ledc
    pin: 33
    id: component_green
  - platform: ledc
    pin: 27
    id: component_blue
  - platform: ledc
    pin: GPIO14
    id: fan_pwm
    frequency: 25000 hz
    channel: 4
    
light:
  - platform: monochromatic
    output: dimmer1
    name: "Dimmer Daylight"
    gamma_correct: 1.0
    default_transition_length: 0s

  - platform: rgb
    name: "Scenic Light"
    id: scenic_light
    red: component_red
    green: component_green
    blue: component_blue
    effects:
      - lambda:
          name: sunrise
          update_interval: 10s
          lambda: |-
            static uint8_t sunrise_lut[4][3] = {{5, 5, 50}, {5, 5, 150}, {150, 5, 150}, {200, 200, 200}};
            static int i = 0;
            auto call = id(scenic_light).make_call();
            call.set_transition_length(10000);
            uint8_t r, g, b;
            r = sunrise_lut[i][0] / 255.;
            g = sunrise_lut[i][1] / 255.;
            b = sunrise_lut[i][2] / 255.;
            call.set_rgb(r,g,b);
            call.perform();
            i++;
            if (i == 3)
              i= 0;
      - lambda:
          name: lightning
          update_interval: 100ms
          lambda: |-
            static uint flashing = false;
            int r = random(0,100);
            if (r == 100) {
              auto call = id(scenic_light).make_call();
              call.set_transition_length(50);
              call.set_rgb(1.,1.,1.);
              flashing = true;
            } else if (flashing) {
              auto call = id(scenic_light).make_call();
              call.set_transition_length(400);
              call.set_rgb(0.,0.,0.);
              flashing = false;
            }

  - platform: monochromatic
    output: fan_pwm
    name: "Ventilator"
    gamma_correct: 1.0

i2c:
  sda: 25
  scl: 26
  scan: True
  id: bus_a

dallas:
  - pin: 22

sensor:
  - platform: hx711
    name: "Scale"
    dout_pin: 34
    clk_pin: 13
    gain: 128
    update_interval: 60s
    unit_of_measurement: g
    filters:
      - calibrate_linear:
          - -29500 -> 0
          - -118200 -> 42.5

  - platform: dallas
    address: 0x0305473B405A0028
    name: "Temperature HeatBed"
    unit_of_measurement: "°C"
    id: temperature_heatbed

  - platform: dallas
    address: 0x5505473B82670028
    name: "Temperature Substrate"
    unit_of_measurement: "°C"
    id: temperature_substrate

  - platform: bme280
    temperature:
      name: "Air Temperature"
      oversampling: 16x
      id: temperature_air
    pressure:
      name: "Air Pressure"
    humidity:
      name: "Air Humidity"
      id: humidity
    address: 0x76
    update_interval: 60s

  - platform: pulse_counter
    name: "Fan Tacho"
    pin: 35
    unit_of_measurement: rpm
    update_interval: 60s
    filters:
      multiply: 0.5

sun:
  latitude: -22.6
  longitude: 167.5

time:
  - platform: homeassistant

climate:
  - platform: thermostat
    name: "Thermostat Air Temp"
    sensor: temperature_air
    default_target_temperature_low: 20 °C
    default_target_temperature_high: 28 °C
    cool_action:
      - switch.turn_on: fan_switch
    heat_action:
      - switch.turn_on: heat_lamp
    idle_action:
      - switch.turn_off: heat_lamp
      - switch.turn_off: fan_switch

  - platform: pid
    id: pid_headbed
    name: "PID Heatbed"
    sensor: temperature_heatbed
    default_target_temperature: 30°C
    heat_output: heat_bed
    control_parameters:
      kp: 2.5
      ki: 0.5
      kd: 1.0

  - platform: pid
    id: pid_humidity
    name: "Humidity"
    sensor: humidity
    default_target_temperature: 75
    heat_output: rain_pump
    control_parameters:
      kp: 0.5
      ki: 0.1
      kd: 0.05
